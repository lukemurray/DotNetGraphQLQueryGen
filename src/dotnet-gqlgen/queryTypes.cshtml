@{
    DisableEncoding = true;
}
@using System.IO
@using dotnet_gqlgen;

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using DotNetGqlClient;
@Model.Usings

/// <summary>
/// Generated classes used for making GraphQL API calls with a typed interface.
@if (!Model.NoGeneratedTimestamp)
{
@:///
@:/// Generated on @DateTime.UtcNow from @Model.SchemaFile @Model.CmdArgs    
}
/// </summary>

namespace @Model.Namespace
{

@foreach(var gqlType in Model.Types.Values)
{
    if (!string.IsNullOrEmpty(gqlType.Description))
    {
    @:/// <summary>
    @gqlType.DescriptionForComment(4)
    @:/// </summary>
    }
    
    @:public abstract class @gqlType.QueryName : @gqlType.Name
    @:{
@foreach(var field in gqlType.Fields)
{
    @if (!field.ShouldBeProperty && !gqlType.IsInput)
    {
        var shortcutOutput = field.OutputMethodSignature(true, false);

        @if (gqlType != Model.Mutation && shortcutOutput != null)
        {
        @field.OutputMethodSignature(true, false)
        }

        @field.OutputMethodSignature(false, true)
    }
}
    @:}
}

}